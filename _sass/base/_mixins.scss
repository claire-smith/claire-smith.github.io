// _mixins.scss

@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	 -moz-border-radius: $radius;
	  -ms-border-radius: $radius;
	      border-radius: $radius;
}

@mixin box-shadow($top, $left, $blur, $spread, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $spread $color;
    -moz-box-shadow:inset $top $left $blur $spread $color;
    box-shadow:inset $top $left $blur $spread $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $spread $color;
    -moz-box-shadow: $top $left $blur $spread $color;
    box-shadow: $top $left $blur $spread $color;
  }
}

@mixin columns($count){
    -webkit-column-count: $count;
       -moz-column-count: $count;
            column-count: $count;
}

@mixin transition($args) {
	-webkit-transition: $args;
		 -moz-transition: $args;
		  -ms-transition: $args;
		   -o-transition: $args;
			  transition: $args;
}

//use psudo for all :before and :after
@mixin pseudo($display: block, $pos: absolute, $content: ''){
	content: $content;
	display: $display;
	position: $pos;
}

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}


@mixin padding-top-bottom($amount) {
  padding-top:$amount;
  padding-bottom:$amount;
}
@mixin margin-top-bottom($amount) {
  margin-top:$amount;
  margin-bottom:$amount;
}
@mixin margin-center() {
  margin-right: auto;
  margin-left: auto;
}

@mixin flex-wrap($justify: flex-start, $valign: stretch, $wrap: nowrap){
	display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
  display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
  display: -ms-flexbox;      /* TWEENER - IE 10 */
  display: -webkit-flex;     /* NEW - Chrome */
  display: flex;             /* NEW, Spec - Opera 12.1, Firefox 20+ */
  flex-direction: row;
  flex-wrap: $wrap;
  /*justify-content: flex-start;*/
  justify-content: $justify;
  /*align-items: baseline;*/
  align-items: $valign;
}

@mixin placeholder {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}
}

@mixin flex-item($align:flex-start){
	align-self: $align;
	display: flex;
}

@mixin filter($filter-type,$filter-amount) {
  -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
  -moz-filter: $filter-type+unquote('(#{$filter-amount})');
  -ms-filter: $filter-type+unquote('(#{$filter-amount})');
  -o-filter: $filter-type+unquote('(#{$filter-amount})');
  filter: $filter-type+unquote('(#{$filter-amount})');
}


// transforms

// generic transform
@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
	 @include transform(scale($scale));
}
// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
	     -o-transform-origin: $origin;
	    -ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
          transform-origin: $origin;
}
// border image
/*  Mixin for Compass - border-image

    $border-image([$image-url], [$offsets], [$repeats])

    Example:
    @include border-image(url(../my_image.png), 10, stretch)
    @include border-image(url(../my_image.png), 10 5 10 5, stretch repeat)
---------------------------------------- */
@mixin border-image($url, $offsets, $repeats)  {
	-webkit-border-image: url($url) $offsets $repeats; /* Safari 3.1-5 */
  -o-border-image: url($url) $offsets $repeats; /* Opera 11-12.1 */
  border-image: url($url) $offsets $repeats;
}


// background-image
@mixin background-image($url, $repeat: no-repeat, $size: auto auto, $position: center center){
	background-image: url($url);
	background-repeat: $repeat;
	background-size: $size;
	background-position: $position;
}

// background colour
@mixin background-opacity($color, $opacity: 0.3) {
  background-color: $color; /* The Fallback */
  background-color: rgba($color, $opacity);
}
/*
$red: red($color);
$green: green($color);
$blue: blue($color);

background: rgb($red, $green, $blue);*/ /* same as using "background: $color" */

// PX TO REM & EM
@function em($pixels, $context: 16) {
  @return #{$pixels/$context}* 1em;
}
@function rem($pixels, $context: 16) {
  @return #{$pixels/$context}* 1rem;
}
// set up grid for as many browsers as possible
@mixin display-grid {
  display: -ms-grid;
  display: grid;
}